/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { EffectComposer, Bloom } from '@react-three/postprocessing'
import StyleProps from '../../props/style.props'
import { KernelSize } from 'postprocessing'

type GLTFResult = GLTF & {
  nodes: {
    Sphere: THREE.Mesh
    Plane_1: THREE.Mesh
    Plane_2: THREE.Mesh
  }
  materials: {
    ['Material.005']: THREE.MeshStandardMaterial
    ['Material.003']: THREE.MeshStandardMaterial
    ['Material.004']: THREE.MeshStandardMaterial
  }
}

export default function Model({
  className,
  ...props
}: JSX.IntrinsicElements['group'] & StyleProps) {
  const { nodes } = useGLTF(
    '/retrowave-transformed.glb'
  ) as unknown as GLTFResult

  return (
    <>
      <group {...props} dispose={null}>
        <group
          name="Camera"
          position={[0, 0.54, -8]}
          rotation={[1.54, 0, Math.PI]}
        >
          <mesh
            geometry={nodes.Sphere.geometry}
            material-color="rgb(255, 138, 0)"
            position={[0, -150, 9.55]}
            rotation={[1.54, 0, -Math.PI]}
            scale={[60, 60, 60]}
          />
        </group>
        <group scale={8}>
          <mesh
            geometry={nodes.Plane_1.geometry}
            position={[0, -0.05, -35]}
            material-color="rgb(23, 20, 29)"
          />
          <mesh
            geometry={nodes.Plane_2.geometry}
            position={[0, -0.05, -35]}
            material-color="rgb(229, 46, 113)"
          />
        </group>
      </group>

      <EffectComposer
        disableNormalPass={true}
        autoClear={true}
        multisampling={4}
      >
        <Bloom
          mipmapBlur
          intensity={10}
          luminanceThreshold={0}
          luminanceSmoothing={1}
          kernelSize={KernelSize.SMALL}
        />
      </EffectComposer>
    </>
  )
}

useGLTF.preload('/retrowave-transformed.glb')
